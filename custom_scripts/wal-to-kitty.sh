# Dependencies: grep, sed
# Usage ./script.sh
#       ./script.sh <kitty config file>
# Function to display error and quit
die() {
    printf "ERR: %s\n" "$1" >&2
    exit 1
}

DEFAULT_CONFIG_PATH="$HOME"/.config/kitty/kitty.conf

SRC="$HOME"/.cache/wal/colors.sh

[ -e "$SRC" ] || die "Wal colors not found, exiting script. Have you executed Wal before?"
printf "Colors found, source ready.\n"

READLINK=$( command -v greadlink || command -v readlink )

# Get config file
if [ -n "$1" ]; then
    [ -e "$1" ] || die "Selected config doesn't exist, exiting script."
    printf "Config found, destination ready.\n"
    CFG=$1
    [ -L "$1" ] && {
        printf "Following symlink to config...\n"
        CFG=$($READLINK -f "$1")
    }
else
    [ -e "$DEFAULT_CONFIG_PATH" ] || die "Kitty config not found, exiting script." 

    CFG="$DEFAULT_CONFIG_PATH"
    [ -L "$DEFAULT_CONFIG_PATH" ] && {
        printf "Following symlink to config...\n"
        CFG=$($READLINK -f "$DEFAULT_CONFIG_PATH")
    }
fi

# Get hex colors from Wal cache
# shellcheck disable=SC1090
. "$SRC"

# Create temp file for sed results
tempfile=$(mktemp)
trap 'rm $tempfile' INT TERM EXIT

# Delete existing coor declarations generated by this script
# If begin comment exists
if grep -q '^# BEGIN ACE' "$CFG"; then
    # And if end comment exists
    if grep -q '^# END ACE' "$CFG"; then
        # Delte contents of the block
        printf "Existing generated colors found, replacing new colors...\n"
        sed '/^# BEGIN ACE/,/^# END ACE/ {
            /^# BEGIN ACE/! { /^# END ACE/!d; }
        }' "$CFG" > "$tempfile" \
            && cat "$tempfile" > "$CFG"
    # If no end comment, don't do anything
    else
        die "No '# END ACE' comment found, please ensure it is present."
    fi
# If no begin comment found
else
  # Don't do anything and notify user if there's an end comment in the file
  ! grep -q '^# END ACE' "$CFG" || die "Found '# END ACE' comment, but no '# BEGIN ACE' comment found. Please ensure it is present."
  printf "There's no existing 'generated' colors, adding comments...\n";
  printf '# BEGIN ACE\n# END ACE' >> "$CFG";
fi

# Write new color definitions
# We know $colorX is unset, we set it by sourcing above
# shellcheck disable=SC2154
{ sed "/^# BEGIN ACE/ r /dev/stdin" "$CFG" > "$tempfile" <<EOF
background $color0
foreground $color7
color0 $color0
color1 $color1
color2 $color2
color3 $color3
color4 $color4
color5 $color5
color6 $color6
color7 $color7
color8 $color8
color9 $color9
color10 $color10
color11 $color11
color12 $color12
color13 $color13
color14 $color14
color15 $color15
EOF
} && cat "$tempfile" > "$CFG" \
  && rm "$tempfile"
trap - INT TERM EXIT
printf "'%s' exported to '%s'\n" "$SRC" "$CFG"

